ext {
    //region - project configuration
    compileSdkVersion = 30
    buildToolsVersion  = "30.0.2"
    applicationId = "com.devlogs.chatty"
    minSdkVersion = 24
    targetSdkVersion = 30
    versionCode = 1
    versionName = "1.0"
    //endregion project configuration

    //region - Plugins
    def plugins = [
            androidApplication: 'com.android.application',
            kotlinKapt : 'kotlin-kapt',
            apollographql: "com.apollographql.apollo",
            realm: 'realm-android',
            google_service: 'com.google.gms.google-services',
            kotlinAndroid : 'kotlin-android',
            kotlinAndroidExtensions : 'kotlin-android-extensions',
            daggerHiltPlugin: 'dagger.hilt.android.plugin'
    ]
    //endregion Plugins

    //region - Dependencies
    def leakCanary = [group: "com.squareup.leakcanary", version: "2.7"]
    leakCanaryDependencies = [
            leakCanary: [configuration: "debugImplementation", dependency: [group: leakCanary.group, name:"leakcanary-android", version: leakCanary.version]]
    ]
    def eventBus = [group: "org.greenrobot", version: "3.2.0"]
    eventBusDependencies = [
            roomRuntime: [configuration: "implementation", dependency: [group: eventBus.group, name: "eventbus", version: eventBus.version]],
    ]
    def room = [group: "androidx.room", version: "2.2.6"]
    roomDependencies = [
            roomRuntime: [configuration: "implementation", dependency: [group: room.group, name: "room-runtime", version: room.version]],
            roomCompiler: [configuration: "kapt", dependency: [group: room.group, name: "room-compiler", version: room.version]]
    ]

    def daggerHilt = [group: "com.google.dagger",version: "2.28-alpha"]
    daggerHiltDependencies = [
            hiltAndroid: [configuration: "implementation", dependency: [group: daggerHilt.group, name: "hilt-android", version: daggerHilt.version]],
            hiltAndroidCompiler: [configuration: "kapt", dependency: [group: daggerHilt.group, name: "hilt-android-compiler", version: daggerHilt.version]]
    ]

    def kotlin = [group: "org.jetbrains.kotlin", version: "1.4.20"]
    kotlinDependencies = [
            kotlinStdlib : [configuration: "implementation", dependency: [group: kotlin.group, name: "kotlin-stdlib", version: kotlin.verion]],
    ]

    def androidxCore = [group: "androidx.core", version: "1.3.2"]
    androidxCoreDependencies = [
           coreKtx: [configuration: "implementation", dependency: [group: androidxCore.group, name: "core-ktx", version: androidxCore.version]],
    ]

    def androidXAppCompat = [group: "androidx.appcompat", version: '1.2.0']
    androidXAppCompatDependencies = [
           androidXAppCompat: [configuration: "implementation", dependency: [group: androidXAppCompat.group, name: "appcompat", version: androidXAppCompat.version]],
    ]

//       implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    def swipeToRefresh = [group: "androidx.swiperefreshlayout", version: "1.1.0"]
    swipeToRefreshDependencies = [
            swipeToRefresh : [configuration: "implementation", dependency: [group: swipeToRefresh.group,name: "swiperefreshlayout", version: swipeToRefresh.version]]
    ]

    def material = [group: "com.google.android.material", version: "1.2.1"]
    materialDependencies = [
           material: [configuration: "implementation", dependency:  [group: material.group, name: "material", version: material.version]],
    ]

    def constraintLayout = [group: "androidx.constraintlayout", version: "2.0.4"]
    constraintLayoutDependencies = [
           constraintLayout: [configuration: "implementation", dependency: [group: constraintLayout.group, name: "constraintlayout", version: constraintLayout.version]],
    ]

    def junit = [group: "junit", version: "4.+"]
    junitDependencies = [
            junit: [configuration: "testImplementation", dependency: [ group: junit.group, name: "junit", version: junit.version]],
    ]

    def androidXTest = [group: "androidx.test.ext" , version: "1.1.2"]
    androidXTestDependencies = [
            androidXTest: [configuration: "androidTestImplementation" , dependency: [ group: androidXTest.group, name: "junit", version: androidXTest.version]],
    ]

    def espresso = [group: "androidx.test.espresso", version: "3.3.0"]
    espressoDependencies = [
           espresso: [configuration: "androidTestImplementation", dependency: [group: espresso.group, name: "espresso-core", version: espresso.version]]
    ]

    def rxJava = [group: "io.reactivex.rxjava3", version: "3.0.0"]
    rxJavaDependencies = [
            rxJava: [configuration: "implementation", dependency: [group: rxJava.group, name: "rxjava", version: rxJava.version]],
            rxAndroid: [configuration: "implementation", dependency: [group: rxJava.group, name: "rxandroid", version: rxJava.version]],
            rxKotlin: [configuration: "implementation", dependency: [group: rxJava.group, name: "rxkotlin", version: "3.0.1"]]
    ]

    def socketIO = [group: "io.socket", version: "1.0.0"]
    socketIODependencies = [
            socketIoClient: [configuration: "implementation",dependency: [group: socketIO.group, name: "socket.io-client", version: socketIO.version]]
    ]

    def retrofit = [group: "com.squareup.retrofit2", version: "2.9.0"]
    retrofitDependencies = [
            scarlarConvertor: [configuration: "implementation", dependency: [group: retrofit.group, name: "converter-scalars", version: retrofit.version]],
            retrofit: [configuration: "implementation", dependency: [group: retrofit.group, name: "retrofit", version: retrofit.version]],
            converterGson: [configuration: "implementation", dependency: [group: retrofit.group, name: "converter-gson", version: retrofit.version]]
    ]

    def circleImage = [group: "de.hdodenhof", version: "3.1.0"]
    circleImageDependencies = [
            circleImage: [configuration: "implementation", dependency: [group: circleImage.group, name: "circleimageview", version: circleImage.version]]
    ]

    def kotlinCoroutine = [group: "org.jetbrains.kotlinx", version: "1.3.9"]
    kotlinCoroutineDependencies = [
            kotlinCoroutine : [configuration: "implementation", dependency: [
                  group: kotlinCoroutine.group, name: "kotlinx-coroutines-android", version: kotlinCoroutine.version
            ]]
    ]

    def apolloGraphql = [group: "com.apollographql.apollo", version: "2.4.6"]
    graphqlDependencies = [
            runtime: [configuration: "implementation", dependency: [group: apolloGraphql.group, name: "apollo-runtime", version: apolloGraphql.version]],
            coroutineSupport: [configuration: "implementation", dependency: [group: apolloGraphql.group, name: "apollo-coroutines-support", version: apolloGraphql.version]],
            api: [configuration: "implementation", dependency: [group: apolloGraphql.group, name: "apollo-api", version: apolloGraphql.version]],
    ]

    def dataStore = [group: "androidx.datastore", version: "1.0.0-alpha05"]
    dataStoreDependencies = [
            dataStorePreferences: [configuration: "implementation", dependency: [group: dataStore.group, name: "datastore-preferences", version: dataStore.version]],
            dataStoreCore: [configuration: "implementation", dependency: [group: dataStore.group, name: "datastore-core", version: dataStore.version]],
    ]

    def fragNav = [group: "com.ncapdevi", version: "3.2.0"]
    fragNavDependencies = [
            fragNav: [configuration: "implementation", dependency: [group: fragNav.group, name: "frag-nav", version: fragNav.version]]
    ]

    def realm = [group: "io.realm", version: "10.3.1"]
    realmDependencies = [
            realmdb: [configuration: "implementation", dependency: [group: realm.group, name: "realm-gradle-plugin", version: realm.version]]
    ]

    def picasso = [group: "com.squareup.picasso", version: "2.71828"]
    picassoDependencies = [
            picasso: [configuration: "implementation", dependency: [group: picasso.group, name: "picasso", version: picasso.version]]
    ]
    //endregion dependencies

    //region - Module
    //region +) App Module
    appModule = [
            dependencies:
                daggerHiltDependencies.values() + kotlinDependencies.values() + androidxCoreDependencies.values() +
                androidXAppCompatDependencies.values() + materialDependencies.values() + constraintLayoutDependencies.values()+
                junitDependencies.values() + androidXTestDependencies.values() + espressoDependencies.values() +
                rxJavaDependencies.values() + socketIODependencies.values() + retrofitDependencies.values() + dataStoreDependencies.values() +
                circleImageDependencies.values() + kotlinCoroutineDependencies.values() + graphqlDependencies.values()
                + eventBusDependencies.values() + fragNavDependencies.values() + picassoDependencies.values() + swipeToRefreshDependencies.values()
                + leakCanaryDependencies.values()
            ,

            plugins: [
                    plugins.androidApplication,
                    plugins.kotlinAndroid,
                    plugins.kotlinAndroidExtensions,
                    plugins.kotlinKapt,
                    plugins.google_service,
                    plugins.daggerHiltPlugin,
                    plugins.apollographql,
                    plugins.realm
            ]
    ]
    //endregion App Module
    //endregion Module
}